//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var PharmaSheetMedicineBlisterDateHistories = newPharmaSheetMedicineBlisterDateHistoriesTable("public", "pharma_sheet_medicine_blister_date_histories", "")

type pharmaSheetMedicineBlisterDateHistoriesTable struct {
	postgres.Table

	// Columns
	ID                postgres.ColumnString
	WarehouseID       postgres.ColumnString
	MedicationID      postgres.ColumnString
	BrandID           postgres.ColumnString
	BlisterChangeDate postgres.ColumnDate
	CreatedAt         postgres.ColumnTimestampz

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type PharmaSheetMedicineBlisterDateHistoriesTable struct {
	pharmaSheetMedicineBlisterDateHistoriesTable

	EXCLUDED pharmaSheetMedicineBlisterDateHistoriesTable
}

// AS creates new PharmaSheetMedicineBlisterDateHistoriesTable with assigned alias
func (a PharmaSheetMedicineBlisterDateHistoriesTable) AS(alias string) *PharmaSheetMedicineBlisterDateHistoriesTable {
	return newPharmaSheetMedicineBlisterDateHistoriesTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new PharmaSheetMedicineBlisterDateHistoriesTable with assigned schema name
func (a PharmaSheetMedicineBlisterDateHistoriesTable) FromSchema(schemaName string) *PharmaSheetMedicineBlisterDateHistoriesTable {
	return newPharmaSheetMedicineBlisterDateHistoriesTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new PharmaSheetMedicineBlisterDateHistoriesTable with assigned table prefix
func (a PharmaSheetMedicineBlisterDateHistoriesTable) WithPrefix(prefix string) *PharmaSheetMedicineBlisterDateHistoriesTable {
	return newPharmaSheetMedicineBlisterDateHistoriesTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new PharmaSheetMedicineBlisterDateHistoriesTable with assigned table suffix
func (a PharmaSheetMedicineBlisterDateHistoriesTable) WithSuffix(suffix string) *PharmaSheetMedicineBlisterDateHistoriesTable {
	return newPharmaSheetMedicineBlisterDateHistoriesTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newPharmaSheetMedicineBlisterDateHistoriesTable(schemaName, tableName, alias string) *PharmaSheetMedicineBlisterDateHistoriesTable {
	return &PharmaSheetMedicineBlisterDateHistoriesTable{
		pharmaSheetMedicineBlisterDateHistoriesTable: newPharmaSheetMedicineBlisterDateHistoriesTableImpl(schemaName, tableName, alias),
		EXCLUDED: newPharmaSheetMedicineBlisterDateHistoriesTableImpl("", "excluded", ""),
	}
}

func newPharmaSheetMedicineBlisterDateHistoriesTableImpl(schemaName, tableName, alias string) pharmaSheetMedicineBlisterDateHistoriesTable {
	var (
		IDColumn                = postgres.StringColumn("id")
		WarehouseIDColumn       = postgres.StringColumn("warehouse_id")
		MedicationIDColumn      = postgres.StringColumn("medication_id")
		BrandIDColumn           = postgres.StringColumn("brand_id")
		BlisterChangeDateColumn = postgres.DateColumn("blister_change_date")
		CreatedAtColumn         = postgres.TimestampzColumn("created_at")
		allColumns              = postgres.ColumnList{IDColumn, WarehouseIDColumn, MedicationIDColumn, BrandIDColumn, BlisterChangeDateColumn, CreatedAtColumn}
		mutableColumns          = postgres.ColumnList{WarehouseIDColumn, MedicationIDColumn, BrandIDColumn, BlisterChangeDateColumn, CreatedAtColumn}
	)

	return pharmaSheetMedicineBlisterDateHistoriesTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:                IDColumn,
		WarehouseID:       WarehouseIDColumn,
		MedicationID:      MedicationIDColumn,
		BrandID:           BrandIDColumn,
		BlisterChangeDate: BlisterChangeDateColumn,
		CreatedAt:         CreatedAtColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
